version: "3.8"

services:
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.5.1
    user: root:root
    hostname: kafka
    restart: always
    ports:
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
      - type: bind
        source: ./log4j.properties
        target: /opt/bitnami/kafka/config/log4j.properties
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://${ETH0_IP}:9094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@127.0.0.1:9093
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx2g -Xms1g
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES=869295617
    # control-center:
  #   image: confluentinc/cp-enterprise-control-center:latest
  #   hostname: control-center
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "9021:9021"
  #   environment:
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     PORT: 9021

volumes:
  kafka_data:
    driver: local
